countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(df, lat = ~lat, lon = ~long) %>%
add_markers(
text = ~paste(airport, city, state, paste("Arrivals:", cnt), sep = "<br />"),
color = ~cnt, symbol = I("square"), size = I(8), hoverinfo = "text"
) %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
g <- list(
scope = 'venezuela',
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(map_df, lat = ~lat, lon = ~lon) %>%
add_markers(symbol = I("square"), size = I(8)) %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
?I()
g <- list(
scope = 'venezuela',
showland = TRUE,
landcolor = toRGB("gray95"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(map_df, lat = ~lat, lon = ~lon) %>%
add_markers(symbol = I("square"), size = I(8)) %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
p <- plot_geo(shape, lat = ~lat, lon = ~lon) %>%
add_markers(symbol = I("square"), size = I(8)) %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
p <- plot_geo(shape, lat = map_df$lat, lon = map_df$lon) %>%
add_markers(symbol = I("square"), size = I(8)) %>%
colorbar(title = "Incoming flights<br />February 2011") %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
p <- plot_geo(shape, lat = map_df$lat, lon = map_df$lon) %>%
add_markers(symbol = I("square"), size = I(8))  %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
g <- list(
scope = 'south america',
showland = TRUE,
landcolor = toRGB("gray95"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(shape, lat = map_df$lat, lon = map_df$lon) %>%
add_markers(symbol = I("square"), size = I(8))  %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
g <- list(
scope = 'venezuela',
showland = TRUE,
landcolor = toRGB("gray95"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(shape, lat = map_df$lat, lon = map_df$lon) %>%
add_markers(symbol = I("square"), size = I(8))  %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
g <- list(
scope = 'Venezuela',
showland = TRUE,
landcolor = toRGB("gray95"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(shape, lat = map_df$lat, lon = map_df$lon) %>%
add_markers(symbol = I("square"), size = I(8))  %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
g <- list(
scope = 'Ven',
showland = TRUE,
landcolor = toRGB("gray95"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(shape, lat = map_df$lat, lon = map_df$lon) %>%
add_markers(symbol = I("square"), size = I(8))  %>%
layout(
title = 'Most trafficked US airports<br />(Hover for airport)', geo = g
)
p
?map_data()
install.packages("maps")
maps::ven
?map_data()
map_data(ven)
map_data('ven')
leaflet(shape)
install.packages("leaflet")
library(leaflet)
leaflet(shape)
leaflet(shape) %>%
addTiles()
leaflet(shape_df)
leaflet(poly_ob)
leaflet(poly_df)
leaflet(poly_ob@data) %>%
addTiles() %>%
leaflet(poly_ob@data) %>%
addTiles()
base_url <- "https://data.colorado.gov/resource/j5pc-4t32.json?"
full_url <- paste0(base_url, "station_status=Active",
"&county=BOULDER")
water_data <- getURL(URLencode(full_url))
# you can then pipe this
water_data_df <- fromJSON(water_data) %>%
flatten(recursive = TRUE) # remove the nested data frame
# turn columns to numeric and remove NA values
water_data_df <- water_data_df %>%
mutate_at(vars(amount, location.latitude, location.longitude), funs(as.numeric)) %>%
filter(!is.na(location.latitude))
library(dplyr)
library(ggplot2)
library(rjson)
library(jsonlite)
library(leaflet)
library(RCurl)
base_url <- "https://data.colorado.gov/resource/j5pc-4t32.json?"
full_url <- paste0(base_url, "station_status=Active",
"&county=BOULDER")
water_data <- getURL(URLencode(full_url))
# you can then pipe this
water_data_df <- fromJSON(water_data) %>%
flatten(recursive = TRUE) # remove the nested data frame
# turn columns to numeric and remove NA values
water_data_df <- water_data_df %>%
mutate_at(vars(amount, location.latitude, location.longitude), funs(as.numeric)) %>%
filter(!is.na(location.latitude))
base_url <- "https://data.colorado.gov/resource/j5pc-4t32.json?"
full_url <- paste0(base_url, "station_status=Active",
"&county=BOULDER")
water_data <- getURL(URLencode(full_url))
# you can then pipe this
water_data_df <- fromJSON(water_data) %>%
flatten(recursive = TRUE) # remove the nested data frame
# turn columns to numeric and remove NA values
water_data_df <- water_data_df %>%
mutate_at(vars(amount, location.latitude, location.longitude), funs(as.numeric)) %>%
filter(!is.na(location.latitude))
base_url <- "https://data.colorado.gov/resource/j5pc-4t32.json?"
full_url <- paste0(base_url, "station_status=Active",
"&county=BOULDER")
full_url
full_url <- paste0(base_url, "station_status=Active")
water_data <- getURL(URLencode(full_url))
base_url <- "https://data.colorado.gov/resource/j5pc-4t32.json?"
full_url <- paste0(base_url, "station_status=Active")
water_data <- getURL(URLencode(full_url))
water_data_df <- fromJSON('data/j5pc-4t32.json') %>%
flatten(recursive = TRUE) # remove the nested data frame
View(water_data_df)
water_data_df <- water_data_df %>%
mutate_at(vars(amount, location.latitude, location.longitude), funs(as.numeric)) %>%
filter(!is.na(location.latitude))
water_data_df
leaflet(map_df) %>%
addProviderTiles("CartoDB.Positron") %>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos)
map_df
addProviderTiles(shape)
addProviderTiles(poly_ob@polygons)
leaflet(map_df) %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos)
names(map_df)
leaflet(map_df) %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,label =  ~n_proyectos)
leaflet(map_df) %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(providers$OpenStreetMap,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(providers$MapBox,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(providers$Stamen.TonerBackground,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(providers$CartoDB.Positron,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(providers$CartoDB.Voyager,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(providers$OneMapSG,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)
)%>%
addMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
runApp()
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~n_proyectos,
label =  ~paste("Numero de proyectos:",n_proyectos*2))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~n_proyectos*2,
label =  ~paste("Numero de proyectos:",n_proyectos))
names(map_df)
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~n_proyectos*1.6,
label =  ~paste("Estado:",nombre_estado,"\n",
"Numero de proyectos:",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~n_proyectos*1.6,
label =  ~paste("Estado:",nombre_estado,"/n",
"Numero de proyectos:",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~n_proyectos*1.6,
label =  ~paste0("Estado: ",nombre_estado,"\n",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~n_proyectos*1.6,
label =  ~paste0("Estado: ",nombre_estado,";",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~n_proyectos*1.6,
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~log(n_proyectos),
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~log(n_proyectos)*5,
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~log(n_proyectos)*6,
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~log(n_proyectos)*10,
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
log(1)
log(2)
log(2)*10
log(2)*10/2
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
log(n_proyectos)*10,
log(2)*5)
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*10),
(log(2)*5))
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*10),
3.465736)
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*10),
(log(2)*5)
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*10),
(log(2)*5),
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*10),
(log(2)*5)),
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*10),
(log(2)*5)),
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
log(2)*5
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*10),
(log(2)*10)),
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*12),
(log(2)*12/2)),
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~ifelse(n_proyectos>1,
(log(n_proyectos)*10),
(log(2)*12/2)),
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
leaflet(map_df) %>%
addProviderTiles(
providers$OpenStreetMap.Mapnik,
options = providerTileOptions(noWrap = TRUE)) %>%
addCircleMarkers(lng = ~lon, lat = ~lat,
popup = ~n_proyectos,radius = ~round(ifelse(n_proyectos>1,
(log(n_proyectos)*10),
(log(2)*12/2))),
label =  ~paste0("[",nombre_estado,"] ",
"Numero de proyectos: ",
n_proyectos))
runApp()
